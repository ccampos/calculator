// Generated by CoffeeScript 1.6.2
(function() {
  var calc;

  calc = angular.module('calc', []);

  calc.controller('CalcCtrl', function($scope) {
    var allowDigits, calcArr, calculate, concatNumber, format, memory;

    calcArr = [];
    allowDigits = 10;
    memory = void 0;
    $scope.keys = ['mc', 'm+', 'm-', 'mr', 7, 8, 9, '/', 4, 5, 6, 'x', 1, 2, 3, '-', 0, '.', '=', '+'];
    calculate = function(firstOperand, operator, secondOperand) {
      var _fOper, _sOper;

      _fOper = firstOperand;
      _sOper = secondOperand;
      switch (operator) {
        case 'x':
          return _fOper * _sOper;
        case '/':
          if (_sOper === 0) {
            return 'Error';
          }
          return _fOper / _sOper;
        case '-':
          return _fOper - _sOper;
        case '+':
          return _fOper + _sOper;
        default:
          return console.log('operator not found');
      }
    };
    concatNumber = function(number, number2) {
      var _number;

      _number = number.toString() + number2;
      return +_number;
    };
    format = function(result) {
      var _decDigitsNeeded, _indexDot, _intDigits, _numLen, _resS, _result;

      _resS = result.toString();
      _numLen = _resS.length;
      _indexDot = _resS.indexOf('.');
      _intDigits = +_resS.slice(0, _indexDot).length;
      _decDigitsNeeded = allowDigits - _intDigits;
      return _result = +result.toFixed(_decDigitsNeeded);
    };
    return $scope.next = function(key) {
      var _number, _operator, _result;

      if (calcArr.length === 0) {
        if (typeof key === 'number') {
          _number = key;
          calcArr.push(_number);
        }
      } else if (calcArr.length === 1) {
        if (typeof key === 'number') {
          _number = key;
          calcArr[0] = concatNumber(calcArr[0], _number);
        } else {
          _operator = key;
          switch (key) {
            case '/':
            case 'x':
            case '-':
            case '+':
              calcArr.push(_operator);
          }
        }
      } else if (calcArr.length === 2) {
        if (typeof key === 'number') {
          _number = key;
          calcArr.push(_number);
        }
      } else if (calcArr.length === 3) {
        if (typeof key === 'number') {
          _number = key;
          calcArr[2] = concatNumber(calcArr[2], _number);
        } else {
          _operator = key;
          switch (key) {
            case '/':
            case 'x':
            case '-':
            case '+':
            case '=':
              _result = calculate(calcArr[0], calcArr[1], calcArr[2]);
              calcArr.push(format(_result));
              calcArr.shift();
              calcArr.shift();
              calcArr.shift();
          }
        }
      }
      switch (key) {
        case 'mc':
          memory = void 0;
          break;
        case 'm+':
          memory = $scope.display;
          break;
        case 'mr':
          if (memory != null) {
            $scope.next(memory);
          }
      }
      return $scope.display = calcArr[calcArr.length - 1];
    };
  });

}).call(this);
