// Generated by CoffeeScript 1.6.2
(function() {
  var calc;

  calc = angular.module('calc', []);

  calc.controller('CalcCtrl', function($scope) {
    var allowDigits, calculate, displayResult, formatResult, getResult, modifyOperands, operands, operator;

    operands = [];
    operator = '/';
    allowDigits = 10;
    $scope.keys = ['mc', 'm+', 'm-', 'mr', 7, 8, 9, '/', 4, 5, 6, 'x', 1, 2, 3, '-', 0, '.', '=', '+'];
    formatResult = function(result) {
      var _decDigitsNeeded, _indexDot, _intDigits, _numLen, _resS, _result;

      _resS = result.toString();
      _numLen = _resS.length;
      _indexDot = _resS.indexOf('.');
      _intDigits = +_resS.slice(0, _indexDot).length;
      _decDigitsNeeded = allowDigits - _intDigits;
      return _result = +result.toFixed(_decDigitsNeeded);
    };
    calculate = function(firstOperand, operator, secondOperand) {
      var _fOper, _sOper;

      _fOper = firstOperand;
      _sOper = secondOperand;
      switch (operator) {
        case 'x':
          return _fOper * _sOper;
        case '/':
          if (_sOper === 0) {
            return 'Error';
          }
          return _fOper / _sOper;
        case '-':
          return _fOper - _sOper;
        case '+':
          return _fOper + _sOper;
        default:
          return console.log('operator not found');
      }
    };
    getResult = function() {
      var _result;

      return _result = formatResult(calculate(operands[0], operator, operands[1]));
    };
    displayResult = function(result) {
      if (result !== 'Error') {
        return $scope.display = result;
      } else {
        return setTimeout(function() {
          operands = [];
          return operator = '';
        }, 1000);
      }
    };
    modifyOperands = function(result) {
      operands.shift();
      operands.shift();
      return operands.push(result);
    };
    return $scope.nextCalculation = function(key) {
      var displayS, _number, _result;

      if (key === '/' || key === 'x' || key === '-' || key === '+') {
        operator = key;
        if (operands.length === 2) {
          _result = getResult();
          displayResult(_result);
          return modifyOperands(_result);
        } else {
          return console.log('another operand needed');
        }
      } else {
        _number = key;
        if ($scope.display === void 0) {
          return $scope.display = _number;
        } else {
          displayS = $scope.display.toString();
          if (displayS.length < allowDigits) {
            return $scope.display = +(displayS + _number.toString());
          }
        }
      }
    };
  });

}).call(this);
