// Generated by CoffeeScript 1.6.2
(function() {
  var calc;

  calc = angular.module('calc', []);

  calc.controller('CalcCtrl', function($scope) {
    var allowDigits, calculate, concat, displayResult, formatResult, getResult, operands, operator;

    operands = [];
    operator = void 0;
    allowDigits = 10;
    $scope.keys = ['mc', 'm+', 'm-', 'mr', 7, 8, 9, '/', 4, 5, 6, 'x', 1, 2, 3, '-', 0, '.', '=', '+'];
    formatResult = function(result) {
      var _decDigitsNeeded, _indexDot, _intDigits, _numLen, _resS, _result;

      _resS = result.toString();
      _numLen = _resS.length;
      _indexDot = _resS.indexOf('.');
      _intDigits = +_resS.slice(0, _indexDot).length;
      _decDigitsNeeded = allowDigits - _intDigits;
      return _result = +result.toFixed(_decDigitsNeeded);
    };
    calculate = function(firstOperand, operator, secondOperand) {
      var _fOper, _sOper;

      _fOper = firstOperand;
      _sOper = secondOperand;
      switch (operator) {
        case 'x':
          return _fOper * _sOper;
        case '/':
          if (_sOper === 0) {
            return 'Error';
          }
          return _fOper / _sOper;
        case '-':
          return _fOper - _sOper;
        case '+':
          return _fOper + _sOper;
        default:
          return console.log('operator not found');
      }
    };
    getResult = function() {
      var _result;

      if (operands[1] !== 0) {
        return _result = formatResult(calculate(operands[0], operator, operands[1]));
      } else {
        return _result = calculate(operands[0], operator, operands[1]);
      }
    };
    displayResult = function(result) {
      if (result !== 'Error') {
        return $scope.display = result;
      } else {
        operands = [];
        operator = '';
        $scope.display = 'Error: div 0';
        setTimeout(function() {
          console.log($scope.display = 0);
          console.log('timeout');
        }, 1000);
      }
    };
    concat = function(key) {
      var displayS;

      if ($scope.display === void 0) {
        return $scope.display = key;
      } else {
        displayS = $scope.display.toString();
        if (displayS.length < allowDigits) {
          if (key === '.') {
            return $scope.display = displayS + key;
          } else {
            return $scope.display = +(displayS + key.toString());
          }
        }
      }
    };
    return $scope.next = function(key) {
      var _result;

      if (typeof key === 'number') {
        if (operator !== void 0) {
          $scope.display = '';
        }
        concat(key);
      }
      switch (key) {
        case '/':
        case 'x':
        case '-':
        case '+':
        case '=':
          operands.push($scope.display);
          if (operands.length === 2) {
            _result = getResult();
            displayResult(_result);
            operands = [];
            operands.push(_result);
          } else {
            console.log('another operand needed');
          }
          operator = key;
          console.log(key);
          break;
        case '.':
          concat(key);
      }
      console.log('operands', operands);
      return console.log('operator', operator);
    };
  });

}).call(this);
